{"version":3,"sources":["logo.svg","remoteclient.js","TransactionList.js","NodeExplorer.js","NodeDetails.js","GameBoard.js","TransactionDetails.js","App.js","reportWebVitals.js","index.js"],"names":["getServer","window","location","href","indexOf","getNodes","callback","a","url","alert","fetch","method","credentials","headers","then","response","status","json","reply","sendChallenge","gameboard","counterParty","escrow","choice","getTransactions","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","TransactionList","props","onTransactionSelected","classes","React","useState","txList","setTransactionList","useEffect","transactions","console","log","List","className","map","item","i","ListItem","onClick","ListItemAvatar","Avatar","ListItemText","primary","challengerChoice","organisation","secondary","Date","recordedTime","toISOString","NodeExplorer","onNodeSelected","nodes","setNodes","nodeList","length","name","identities","address","addresses","node","NodeDetails","style","textAlign","src","formControl","margin","spacing","minWidth","selectEmpty","marginTop","GameBoard","onChange","setEscrow","setCounterParty","setChoice","error","setError","ready","currentNode","find","isCurrentNode","FormControl","InputLabel","id","Select","labelId","value","event","target","MenuItem","FormHelperText","display","TransactionDetails","transaction","TabPanel","children","index","other","Typography","component","role","hidden","aria-labelledby","Box","p","position","minHeight","fab","bottom","right","fabGreen","color","common","white","green","a11yProps","App","setValue","gameboardReady","setGameboardReady","setGameboard","nodeDetails","setNodeDetails","transactionDetails","setTransactionDetails","startGame","useTheme","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","fabs","icon","label","action","color2","display2","clsx","disabled","icon2","className2","action2","AppBar","Tabs","newValue","indicatorColor","textColor","variant","aria-label","Tab","axis","direction","onChangeIndex","dir","game","Zoom","in","timeout","transitionDelay","unmountOnExit","Fab","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAAe,I,oTCKf,SAASA,IACL,OAAIC,OAAOC,SAASC,KAAKC,QAAQ,SAAS,EAN3B,yBASJH,OAAOC,SAASC,KAIxB,IAAME,EAAQ,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DAChBC,EADgB,UACTR,KADS,OAZJ,aAchBS,MAAMD,GAFc,SAGFE,MAAMF,EAAK,CACzBG,OAAQ,MACRC,YAAa,cACbC,QAAS,CACL,OAAU,oCACV,eAAgB,sBAGnBC,MAAK,SAAUC,GACOA,EAASC,OAC5B,OAAOD,EAASE,UAGnBH,MAAK,SAAUG,GACZ,OAAOA,KAjBK,OAGhBC,EAHgB,OAmBpBZ,EAASY,GAnBW,2CAAH,sDAqBRC,EAAa,uCAAI,WAAMC,EAAWd,GAAjB,iBAAAC,EAAA,6DACtBC,EADsB,UACfR,KADe,OAhCd,SAgCc,yBACyBoB,EAAUC,aADnC,mBAC0DD,EAAUE,OADpE,mBACqFF,EAAUG,QAD/F,SAERb,MAAMF,EAAK,CACzBG,OAAQ,MACRC,YAAa,cACbC,QAAS,CACL,OAAU,oCACV,eAAgB,sBAGnBC,MAAK,SAAUC,GACOA,EAASC,OAC5B,OAAOD,EAASE,UAGnBH,MAAK,SAAUG,GACZ,OAAOA,KAhBW,OAEtBC,EAFsB,OAkB1BZ,EAASY,GAlBiB,2CAAJ,wDAoBbM,EAAe,uCAAG,WAAMlB,GAAN,iBAAAC,EAAA,6DACvBC,EADuB,UAChBR,KADgB,OAnDJ,oBAmDI,SAETU,MAAMF,EAAK,CACzBG,OAAQ,MACRC,YAAa,cACbC,QAAS,CACL,OAAU,oCACV,eAAgB,sBAGnBC,MAAK,SAAUC,GACOA,EAASC,OAC5B,OAAOD,EAASE,UAGnBH,MAAK,SAAUG,GACZ,OAAOA,KAhBY,OAEvBC,EAFuB,OAkB3BZ,EAASY,GAlBkB,2CAAH,sDCpCtBO,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,MAAO,OACPC,SAAU,IACVC,gBAAiBJ,EAAMK,QAAQC,WAAWC,WAmCjCC,MA/Bf,SAAyBC,GAAQ,IACrBC,EAAoCD,EAApCC,sBACFC,GAFsB,YACgBF,EADhB,2BAEZX,KAFY,EAGSc,IAAMC,SAAS,GAHxB,mBAGrBC,EAHqB,KAGbC,EAHa,KAW5B,OAPAH,IAAMI,WAAU,WACZnB,GAAgB,SAASoB,GACrBC,QAAQC,IAAI,eAAgBF,GAC5BF,EAAmBE,QAEtB,IAGD,cAACG,EAAA,EAAD,CAAMC,UAAWV,EAAQV,KAAzB,SACKa,GAAUA,EAAOQ,KAAI,SAACC,EAAKC,GACxB,OACA,eAACC,EAAA,EAAD,CAAUC,QAAS,kBAAIhB,EAAsBa,IAA7C,UACI,cAACI,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,WACkB,OAAbL,EAAKlC,QAAiB,cAAC,IAAD,IACT,OAAbkC,EAAKlC,QAAiB,cAAC,IAAD,IACT,cAAbkC,EAAKlC,QAAwB,cAAC,IAAD,SAGlC,cAACwC,EAAA,EAAD,CAAcC,QAASP,EAAKQ,iBAAiB,IAAIR,EAAK7B,aAAasC,aAAcC,UAAW,IAAIC,KAAK,EAAEX,EAAKY,cAAcC,yB,iBC9BxItC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACJC,MAAO,OACPC,SAAU,IACVC,gBAAiBJ,EAAMK,QAAQC,WAAWC,WAqCjC8B,OAjCf,SAAsB5B,GAAQ,IAClB6B,EAA6B7B,EAA7B6B,eACF3B,GAFmB,YACYF,EADZ,oBAETX,MAFS,EAGCc,IAAMC,SAAS,IAHhB,mBAGlB0B,EAHkB,KAGXC,EAHW,KAczB,OAVA5B,IAAMI,WAAU,WACZtC,GAAS,SAAA+D,GACLvB,QAAQC,IAAI,eAAgBsB,GAC5B,IAAK,IAAIjB,EAAE,EAAEA,EAAEiB,EAASC,OAAOlB,IAC3BiB,EAASjB,GAAGmB,KAAKF,EAASjB,GAAGoB,WAAW,GAAGD,KAAKX,aAChDS,EAASjB,GAAGqB,QAAQJ,EAASjB,GAAGsB,UAAU,GAE9CN,EAASC,QAEd,IAEC,cAACrB,EAAA,EAAD,CAAMC,UAAWV,EAAQV,KAAzB,SACKsC,GAASA,EAAMjB,KAAI,SAACyB,EAAKvB,GACtB,OACA,eAACC,EAAA,EAAD,CAAUC,QAAS,kBAAIY,EAAeS,IAAtC,UACI,cAACpB,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,WACgB,UAAXmB,EAAKJ,MAAkB,cAAC,IAAD,IACZ,UAAXI,EAAKJ,MAAkB,cAAC,IAAD,SAG5B,cAACd,EAAA,EAAD,CAAcC,QAASiB,EAAKJ,KAAMV,UAAWc,EAAKF,mB,4BCrCvDG,OAZf,SAAqBvC,GAAQ,IACjBsC,EAAmBtC,EAAnBsC,KAIR,OALwB,YACGtC,EADH,UAMpB,qBAAKwC,MAAO,CAACC,UAAU,QAAvB,SACA,cAAC,KAAD,CAAWC,IAAKJ,O,kDCDlBjD,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCoD,YAAa,CACTC,OAAQrD,EAAMsD,QAAQ,GACtBC,SAAU,OAEdC,YAAa,CACTC,UAAWzD,EAAMsD,QAAQ,QAIlB,SAASI,GAAUjD,GAAQ,IAC9BkD,EAAuBlD,EAAvBkD,SACFhD,GAF+B,YACNF,EADM,cAErBX,MAFqB,EAGTc,IAAMC,SAAS,IAHN,mBAG9BlB,EAH8B,KAGtBiE,EAHsB,OAIGhD,IAAMC,SAAS,IAJlB,mBAI9BnB,EAJ8B,KAIhBmE,EAJgB,OAKTjD,IAAMC,SAAS,IALN,mBAK9BjB,EAL8B,KAKtBkE,EALsB,OAMXlD,IAAMC,SAAS,IANJ,mBAM9B0B,EAN8B,KAMvBC,EANuB,OAOX5B,IAAMC,SAAS,IAPJ,mBAO9BkD,EAP8B,KAOvBC,EAPuB,KAkDrC,OAhCApD,IAAMI,WAAU,WACZtC,GAAS,SAAA+D,GACLvB,QAAQC,IAAI,YAAasB,GACzB,IAAK,IAAIjB,EAAE,EAAEA,EAAEiB,EAASC,OAAOlB,IAC3BiB,EAASjB,GAAGmB,KAAKF,EAASjB,GAAGoB,WAAW,GAAGD,KAAKX,aAEpDQ,EAASC,QAEd,IACH7B,IAAMI,WAAU,WACZ,IAAIiD,GAAM,EACV,GAAIrE,GAAUF,GAAgBC,EAC1B,GAAID,IAAeC,EAClBqE,EAAS,wDACH,CACH,IAAIE,EAAY3B,EAAM4B,MAAK,SAAApB,GAAI,OAAEA,EAAKqB,iBAClCF,EAAYvB,OAAOjD,EACnBsE,EAAS,yDACFE,EAAYvB,OAAOhD,EAC1BqE,EAAS,mDACa,WAAftE,GAAoC,WAATC,EAClCqE,EAAS,qCAETA,GAAS,GACTC,GAAM,GAIdN,GACAA,EAAS,CAACM,QAAOtE,SAAQD,eAAcE,aAE1C,CAACF,EAAcC,EAAQC,IAExB,gCACI,eAACyE,GAAA,EAAD,CAAahD,UAAWV,EAAQyC,YAAhC,UACI,cAACkB,GAAA,EAAD,CAAYC,GAAG,2BAAf,oBACA,eAACC,GAAA,EAAD,CACIC,QAAQ,2BACRF,GAAG,qBACHG,MAAO9E,EACP+D,SAlDW,SAACgB,GACxBb,EAAUa,EAAMC,OAAOF,QA6Cf,UAMI,cAACG,GAAA,EAAD,CAAUH,MAAO,OAAjB,kBACA,cAACG,GAAA,EAAD,CAAUH,MAAO,QAAjB,mBACA,cAACG,GAAA,EAAD,CAAUH,MAAO,WAAjB,4BAGR,eAACL,GAAA,EAAD,CAAahD,UAAWV,EAAQyC,YAAaW,MAAOA,EAApD,UACI,cAACO,GAAA,EAAD,CAAYC,GAAG,2BAAf,oBACA,cAACC,GAAA,EAAD,CACIC,QAAQ,2BACRF,GAAG,qBACHG,MAAO/E,EACPgE,SA5DW,SAACgB,GACxBf,EAAUe,EAAMC,OAAOF,QAuDf,SAOQnC,GAASA,EAAMjB,KAAI,SAAAyB,GACf,OACA,cAAC8B,GAAA,EAAD,CAAUH,MAAO3B,EAAKJ,KAAtB,SAA6BI,EAAKJ,eAMlD,eAAC0B,GAAA,EAAD,CAAahD,UAAWV,EAAQyC,YAAaW,MAAOA,EAApD,UACI,cAACO,GAAA,EAAD,CAAYC,GAAG,2BAAf,2BACA,cAACC,GAAA,EAAD,CACIC,QAAQ,2BACRF,GAAG,qBACHG,MAAOhF,EACPiE,SA1EiB,SAACgB,GAC9Bd,EAAgBc,EAAMC,OAAOF,QAqErB,SAOQnC,GAASA,EAAMjB,KAAI,SAAAyB,GACf,OACA,cAAC8B,GAAA,EAAD,CAAUH,MAAO3B,EAAKJ,KAAtB,SAA6BI,EAAKJ,eAM9C,cAACmC,GAAA,EAAD,CAAgB7B,MAAO,CAAC8B,QAAQhB,EAAQ,GAAK,QAA7C,SAAuDA,OCvGxDiB,OAZf,SAA4BvE,GAAQ,IACxBwE,EAA0BxE,EAA1BwE,YAIR,OAL+B,YACGxE,EADH,iBAM3B,qBAAKwC,MAAO,CAACC,UAAU,QAAvB,SACA,cAAC,KAAD,CAAWC,IAAK8B,OCmBxB,SAASC,GAASzE,GAAQ,IAChB0E,EAAqC1E,EAArC0E,SAAUT,EAA2BjE,EAA3BiE,MAAOU,EAAoB3E,EAApB2E,MAAUC,EADZ,YACsB5E,EADtB,8BAGvB,OACE,cAAC6E,EAAA,EAAD,yBACEC,UAAU,MACVC,KAAK,WACLC,OAAQf,IAAUU,EAClBb,GAAE,0BAAqBa,GACvBM,kBAAA,qBAA+BN,IAC3BC,GANN,aAQGX,IAAUU,GAAS,cAACO,EAAA,EAAD,CAAKC,EAAG,EAAR,SAAYT,OAUtC,IAAMrF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJG,gBAAiBJ,EAAMK,QAAQC,WAAWC,MAC1CL,MAAO,IACP2F,SAAU,WACVC,UAAW,KAEbC,IAAK,CACHF,SAAU,WACVG,OAAQhG,EAAMsD,QAAQ,GACtB2C,MAAOjG,EAAMsD,QAAQ,IAEvB4C,SAAU,CACRC,MAAOnG,EAAMK,QAAQ+F,OAAOC,MAC5BjG,gBAAiBkG,IAAM,KACvB,UAAW,CACTlG,gBAAiBkG,IAAM,WAI7B,SAASC,GAAUnB,GACjB,MAAO,CACLb,GAAG,cAAD,OAAgBa,GAClB,gBAAgB,mBAAhB,OAAoCA,IAgLzBoB,OA5Kf,WAAgB,IAAD,EACa5F,IAAMC,SAAS,GAD5B,mBACN6D,EADM,KACC+B,EADD,OAE+B7F,IAAMC,UAAS,GAF9C,mBAEN6F,EAFM,KAEUC,EAFV,OAGqB/F,IAAMC,SAAS,IAHpC,mBAGNpB,EAHM,KAGKmH,EAHL,OAIyBhG,IAAMC,SAAS,IAJxC,mBAINgG,EAJM,KAIOC,EAJP,OAKuClG,IAAMC,SAAS,IALtD,mBAKNkG,EALM,KAKcC,EALd,KAMPC,EAAY,WAChBR,EAAS,IA8BX7F,IAAMI,WAAU,WACdE,QAAQC,IAAI,QAASuD,GACR,GAAPA,IACFoC,EAAe,MACfE,EAAsB,SAEzB,CAACtC,IACJ,IAAM/D,EAAUb,KACVE,EAAQkH,cACRC,EAAqB,CACzBC,MAAOpH,EAAMqH,YAAYC,SAASC,eAClCC,KAAMxH,EAAMqH,YAAYC,SAASG,eAG/BC,EAAO,CACX,CACEvB,MAAO,UACP9E,UAAWV,EAAQoF,IACnB4B,KAAM,cAAC,IAAD,IACNC,MAAO,MACPC,OAAQZ,EACRa,OAAQ,YACRC,SAAU,QAEZ,CACE5B,MAAO,UACP9E,UAAWV,EAAQoF,IACnB4B,KAAM,cAAC,IAAD,IACNC,MAAO,MACPC,OAAQZ,EACRa,OAAQ,YACRC,SAAU,QAEZ,CACE5B,MAAO,UACP9E,UAAW2G,YAAKrH,EAAQoF,IAAKpF,EAAQuF,UACrCyB,KAAM,cAAC,IAAD,IACNC,MAAO,SACP7C,QAAS,OACTgD,SAAU,QAEZ,CACE5B,MAAO,UACP9E,UAAW2G,YAAKrH,EAAQoF,IAAKpF,EAAQuF,UACrC+B,UAAWvB,EACXiB,KAAM,cAAC,IAAD,IACNO,MAAO,cAAC,IAAD,IACPN,MAAO,OACPC,OA5EqB,WACrBrI,EAAcC,GAAW,SAASF,GAChC2B,QAAQC,IAAI,mBAAmB5B,GAC/BkH,EAAS,OA0EX0B,WAAYH,YAAKrH,EAAQoF,KACzB+B,OAAQ,YACRM,QAzEiB,WACjB3B,EAAS,MA2EX,OACE,sBAAKpF,UAAU,MAAf,UACC,cAACgH,EAAA,EAAD,CAAQxC,SAAS,SAASM,MAAM,UAAhC,SACG,eAACmC,EAAA,EAAD,CACE5D,MAAOA,EACPf,SA9Ea,SAACgB,EAAO4D,GAC3B9B,EAAS8B,IA8EHC,eAAe,UACfC,UAAU,UACVC,QAAQ,YACRC,aAAW,sBANb,UAQE,cAACC,EAAA,EAAD,aAAKhB,MAAM,gBAAmBrB,GAAU,KACxC,cAACqC,EAAA,EAAD,aAAKhB,MAAM,SAAYrB,GAAU,KACjC,cAACqC,EAAA,EAAD,aAAKhB,MAAOf,EAAcA,EAAYlE,KAAOoE,EAAqBA,EAAmBhF,iBAAmB,IAAQwE,GAAU,UAG9H,eAAC,IAAD,CACEsC,KAA0B,QAApB7I,EAAM8I,UAAsB,YAAc,IAChD1D,MAAOV,EACPqE,cAhFoB,SAAC3D,GACzBqB,EAASrB,IA4EP,UAKE,cAACF,GAAD,CAAUR,MAAOA,EAAOU,MAAO,EAAG4D,IAAKhJ,EAAM8I,UAA7C,SACE,cAAC,EAAD,CAAiBpI,sBAxFU,SAAAuE,GACjC+B,EAAsB/B,GACtBwB,EAAS,QAwFL,cAACvB,GAAD,CAAUR,MAAOA,EAAOU,MAAO,EAAG4D,IAAKhJ,EAAM8I,UAA7C,SACA,cAAC,GAAD,CAAcxG,eA/FI,SAAAS,GACtB+D,EAAe/D,GACf0D,EAAS,QA+FL,eAACvB,GAAD,CAAUR,MAAOA,EAAOU,MAAO,EAAG4D,IAAKhJ,EAAM8I,UAA7C,UACGjC,GACC,cAAC,GAAD,CAAa9D,KAAM8D,IAEpBE,GACC,cAAC,GAAD,CAAoB9B,YAAa8B,OAIrC,cAAC7B,GAAD,CAAUR,MAAOA,EAAOU,MAAO,EAAG4D,IAAKhJ,EAAM8I,UAA7C,SACE,cAACpF,GAAD,CAAWC,SA/FK,SAACsF,GACvBtC,EAAkBsC,EAAKhF,OACvB2C,EAAaqC,WAgGVvB,EAAKpG,KAAI,SAACyE,EAAKX,GAAN,OACR,qCACA,cAAC8D,EAAA,EAAD,CAEEC,GAAIzE,IAAUU,EACdgE,QAASjC,EACTlE,MAAO,CACLoG,gBAAgB,GAAD,OAAK3E,IAAUU,EAAQ+B,EAAmBK,KAAO,EAAjD,OAEjB8B,eAAa,EAPf,SASE,cAACC,EAAA,EAAD,CAAKZ,aAAY5C,EAAI6B,MAAOvG,UAAW0E,EAAI1E,UAAW8E,MAAOJ,EAAII,MAC/DlD,MAAO,CAAC8B,QAAQgB,EAAIhB,SACpBkD,SAAUlC,EAAIkC,SACdvG,QAASqE,EAAI8B,OAHf,SAIG9B,EAAI4B,QAZF5B,EAAII,OAgBX,cAAC+C,EAAA,EAAD,CAEEC,GAAIzE,IAAUU,EACdgE,QAASjC,EACTlE,MAAO,CACLoG,gBAAgB,GAAD,OAAK3E,IAAUU,EAAQ+B,EAAmBK,KAAO,EAAjD,OAEjB8B,eAAa,EAPf,SASE,cAACC,EAAA,EAAD,CAAKZ,aAAY5C,EAAI6B,MAAOvG,UAAW0E,EAAIoC,WAAYhC,MAAOJ,EAAI+B,OAChE7E,MAAO,CAAC8B,QAAQgB,EAAIgC,SAAU9B,MAAM,QACpCvE,QAASqE,EAAIqC,QAFf,SAGGrC,EAAImC,SAXFnC,EAAII,iBCzNJqD,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBvK,MAAK,YAAkD,IAA/CwK,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.50d6e439.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","const LOCAL_SERVER=\"http://localhost:10050\";\nconst GET_NODES_API=\"/getnodes\";\nconst ISSUE_API=\"/issue\";\nconst GET_TRANSACTIONS_API=\"/gettransactions\";\n\nfunction getServer() {\n    if (window.location.href.indexOf('3000')>-1) {\n        return LOCAL_SERVER;\n    } else {\n        return window.location.href;\n    }\n}\n\nexport const getNodes = async(callback) => {\n    let url=`${getServer()}${GET_NODES_API}`;\n    alert(url);\n    let reply = await fetch(url, {\n        method: \"GET\",\n        credentials: \"same-origin\", // send cookies\n        headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(function (response) {\n            let responseCode = response.status;\n            return response.json();\n\n        })\n        .then(function (json) {\n            return json\n        })\n    callback(reply);\n}\nexport const sendChallenge =  async(gameboard, callback) => {\n    let url=`${getServer()}${ISSUE_API}?counterParty=${gameboard.counterParty}&escrow=${gameboard.escrow}&choice=${gameboard.choice}`;\n    let reply = await fetch(url, {\n        method: \"GET\",\n        credentials: \"same-origin\", // send cookies\n        headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(function (response) {\n            let responseCode = response.status;\n            return response.json();\n\n        })\n        .then(function (json) {\n            return json\n        })\n    callback(reply);\n}\nexport const getTransactions = async(callback) => {\n    let url=`${getServer()}${GET_TRANSACTIONS_API}`;\n    let reply = await fetch(url, {\n        method: \"GET\",\n        credentials: \"same-origin\", // send cookies\n        headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(function (response) {\n            let responseCode = response.status;\n            return response.json();\n\n        })\n        .then(function (json) {\n            return json\n        })\n    callback(reply);\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport ImageIcon from '@material-ui/icons/Image';\nimport AccountBalance from '@material-ui/icons/AccountBalance';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\n\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport {getTransactions} from './remoteclient'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n\nfunction TransactionList(props) {\n    const { onTransactionSelected, ...other } = props;\n    const classes = useStyles();\n    const [txList, setTransactionList] = React.useState(0);\n    React.useEffect(() => {\n        getTransactions(function(transactions) {\n            console.log(\"transactions\", transactions);\n            setTransactionList(transactions);\n        })\n      }, []);\n      \n    return (\n        <List className={classes.root}>\n            {txList && txList.map((item,i)=>{\n                return(\n                <ListItem onClick={()=>onTransactionSelected(item)}>\n                    <ListItemAvatar>\n                    <Avatar>\n                        {item.status=='tbd' && <EmojiEvents />}\n                        {item.status=='tbd' && <AccountBalance />}\n                        {item.status=='UNCONSUMED' && <ScheduleIcon />}\n                    </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={item.challengerChoice+\" \"+item.counterParty.organisation} secondary={new Date(1*item.recordedTime).toISOString()} />\n              </ListItem>\n                )\n            })\n            }\n        </List>\n    )\n}\nexport default TransactionList;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport ImageIcon from '@material-ui/icons/Image';\nimport AccountBalance from '@material-ui/icons/AccountBalance';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\n\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport {getNodes} from './remoteclient'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n\nfunction NodeExplorer(props) {\n    const { onNodeSelected, ...other } = props;\n    const classes = useStyles();\n    const [nodes, setNodes] = React.useState('');\n    React.useEffect(() => {\n        getNodes(nodeList=>{\n            console.log(\"NodeExplorer\", nodeList);\n            for (var i=0;i<nodeList.length;i++) {\n                nodeList[i].name=nodeList[i].identities[0].name.organisation;\n                nodeList[i].address=nodeList[i].addresses[0];\n            };\n            setNodes(nodeList);\n        });\n    }, []);\n    return (\n        <List className={classes.root}>\n            {nodes && nodes.map((node,i)=>{\n                return(\n                <ListItem onClick={()=>onNodeSelected(node)}>\n                    <ListItemAvatar>\n                    <Avatar>\n                        {node.name!='Notary' && <AccountTreeIcon />}\n                        {node.name=='Notary' && <AccountBalance />}\n                    </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={node.name} secondary={node.address} />\n              </ListItem>\n                )\n            })\n            }\n        </List>\n    )\n}\nexport default NodeExplorer;","import JSONTree from 'react-json-tree'\nimport ReactJson from 'react-json-view'\n\nfunction NodeDetails(props) {\n    const { node, ...other } = props;\n    /*return (\n        <JSONTree data={node} />\n    )*/\n    return (\n        <div style={{textAlign:'left'}}>\n        <ReactJson src={node} />\n        </div>\n    )\n}\n\nexport default NodeDetails;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {getNodes} from './remoteclient'\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '90%',\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function GameBoard(props) {\n    const { onChange, ...other } = props;\n    const classes = useStyles();\n    const [escrow, setEscrow] = React.useState('');\n    const [counterParty, setCounterParty] = React.useState('');\n    const [choice, setChoice] = React.useState('');\n    const [nodes, setNodes] = React.useState('');\n    const [error, setError] = React.useState('');\n    const handleChoiceChange = (event) => {\n        setChoice(event.target.value);\n    };\n    const handleEscrowChange = (event) => {\n        setEscrow(event.target.value);\n    };\n    const handleCounterpartyChange = (event) => {\n        setCounterParty(event.target.value);\n    };\n\n    React.useEffect(() => {\n        getNodes(nodeList=>{\n            console.log(\"Gameboard\", nodeList);\n            for (var i=0;i<nodeList.length;i++) {\n                nodeList[i].name=nodeList[i].identities[0].name.organisation;\n            };\n            setNodes(nodeList);\n        });\n    }, []);\n    React.useEffect(() => {\n        let ready=false;\n        if (choice && counterParty && escrow) {\n            if (counterParty===escrow) {\n             setError(\"Escrow and counterparty cannot be the same party\");\n            } else {\n                let currentNode=nodes.find(node=>node.isCurrentNode);\n                if (currentNode.name===counterParty) {\n                    setError(\"Counterparty and current node cannot be the same node\");\n                } else if (currentNode.name===escrow) {\n                    setError(\"Escrow and current node cannot be the same node\");\n                } else if (counterParty==='Notary' || escrow==='Notary') {\n                    setError(\"Notary cannot be a signing party\");\n                } else {\n                    setError(false);\n                    ready=true;\n                }\n            }\n        }\n        if (onChange) {\n            onChange({ready, escrow, counterParty, choice});\n        }\n      }, [counterParty, escrow, choice]);\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Choice</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={choice}\n                    onChange={handleChoiceChange}\n                >\n                    <MenuItem value={'rock'}>Rock</MenuItem>\n                    <MenuItem value={'paper'}>Paper</MenuItem>\n                    <MenuItem value={'scissors'}>Scissors</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl} error={error}>\n                <InputLabel id=\"demo-simple-select-label\">Escrow</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={escrow}\n                    onChange={handleEscrowChange}\n                >\n                    {\n                        nodes && nodes.map(node=>{\n                            return (\n                            <MenuItem value={node.name}>{node.name}</MenuItem>\n                            )\n                        })\n                    }\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl} error={error}>\n                <InputLabel id=\"demo-simple-select-label\">Counter Party</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={counterParty}\n                    onChange={handleCounterpartyChange}\n                >\n                    {\n                        nodes && nodes.map(node=>{\n                            return (\n                            <MenuItem value={node.name}>{node.name}</MenuItem>\n                            )\n                        })\n                    }\n                </Select>\n            </FormControl>\n                <FormHelperText style={{display:error ? '' : 'none'}}>{error}</FormHelperText>\n        </div>\n    )\n}","import JSONTree from 'react-json-tree'\nimport ReactJson from 'react-json-view'\n\nfunction TransactionDetails(props) {\n    const { transaction, ...other } = props;\n    /*return (\n        <JSONTree data={node} />\n    )*/\n    return (\n        <div style={{textAlign:'left'}}>\n        <ReactJson src={transaction} />\n        </div>\n    )\n}\n\nexport default TransactionDetails;","import React from 'react';\nimport logo from './logo.svg';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport './App.css';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SwipeableViews from 'react-swipeable-views';\nimport Zoom from '@material-ui/core/Zoom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { green } from '@material-ui/core/colors';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport TransactionList from './TransactionList'\nimport NodeExplorer from './NodeExplorer'\nimport NodeDetails from './NodeDetails'\nimport GameBoard from './GameBoard';\nimport {sendChallenge} from './remoteclient'\nimport TransactionDetails from './TransactionDetails';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`action-tabpanel-${index}`}\n      aria-labelledby={`action-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600],\n    },\n  },\n}));\nfunction a11yProps(index) {\n  return {\n    id: `action-tab-${index}`,\n    'aria-controls': `action-tabpanel-${index}`,\n  };\n}\n\nfunction App() {\n  const [value, setValue] = React.useState(0);\n  const [gameboardReady, setGameboardReady] = React.useState(false);\n  const [gameboard, setGameboard] = React.useState({});\n  const [nodeDetails, setNodeDetails] = React.useState({});\n  const [transactionDetails, setTransactionDetails] = React.useState({});\n  const startGame = () =>{\n    setValue(3);\n  }\n  const issueChallenge = () => {\n    sendChallenge(gameboard, function(reply) {\n      console.log(\"challenge issued\",reply);\n      setValue(3)\n    })\n  }\n  const cancelGame = () =>{\n    setValue(0);\n  }\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const showNodeDetails = node => {\n    setNodeDetails(node);\n    setValue(2);\n  }\n  const showNodeTransactionDetails = transaction => {\n    setTransactionDetails(transaction);\n    setValue(2);\n  }\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n  const changeGameboard = (game) => {\n    setGameboardReady(game.ready);\n    setGameboard(game);\n  }\n  React.useEffect(() => {\n    console.log(\"value\", value)\n      if (value!=2) {\n        setNodeDetails(null);\n        setTransactionDetails(null)\n      }\n  }, [value]);\n  const classes = useStyles();\n  const theme = useTheme();\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  };\n\nconst fabs = [\n  {\n    color: 'primary',\n    className: classes.fab,\n    icon: <AddIcon />,\n    label: 'Add',\n    action: startGame,\n    color2: 'secondary',\n    display2: 'none'\n  },\n  {\n    color: 'primary',\n    className: classes.fab,\n    icon: <AddIcon />,\n    label: 'Add',\n    action: startGame,\n    color2: 'secondary',\n    display2: 'none'\n  },\n  {\n    color: 'inherit',\n    className: clsx(classes.fab, classes.fabGreen),\n    icon: <UpIcon />,\n    label: 'Expand',\n    display: 'none',\n    display2: 'none'\n  },\n  {\n    color: 'primary',\n    className: clsx(classes.fab, classes.fabGreen),\n    disabled: !gameboardReady,\n    icon: <PlayArrow />,\n    icon2: <CancelIcon />,\n    label: 'Edit',\n    action: issueChallenge,\n    className2: clsx(classes.fab),\n    color2: 'secondary',\n    action2: cancelGame\n  }\n];\n  return (\n    <div className=\"App\">\n     <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"action tabs example\"\n        >\n          <Tab label=\"Transactions\" {...a11yProps(0)} />\n          <Tab label=\"Nodes\" {...a11yProps(1)} />\n          <Tab label={nodeDetails ? nodeDetails.name : transactionDetails ? transactionDetails.challengerChoice : \"\"} {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction} >\n          <TransactionList onTransactionSelected={showNodeTransactionDetails}/>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n        <NodeExplorer onNodeSelected={showNodeDetails}/>\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          {nodeDetails &&\n            <NodeDetails node={nodeDetails}/>\n          }\n          {transactionDetails &&\n            <TransactionDetails transaction={transactionDetails}/>\n          }\n          \n        </TabPanel>\n        <TabPanel value={value} index={3} dir={theme.direction}>\n          <GameBoard onChange={changeGameboard}/>\n        </TabPanel>\n      </SwipeableViews>\n      {fabs.map((fab, index) => (\n        <>\n        <Zoom\n          key={fab.color}\n          in={value === index}\n          timeout={transitionDuration}\n          style={{\n            transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`,\n          }}\n          unmountOnExit\n        >\n          <Fab aria-label={fab.label} className={fab.className} color={fab.color}\n            style={{display:fab.display}}\n            disabled={fab.disabled}\n            onClick={fab.action}>\n            {fab.icon}\n          </Fab>\n        </Zoom>\n\n        <Zoom\n          key={fab.color}\n          in={value === index}\n          timeout={transitionDuration}\n          style={{\n            transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`,\n          }}\n          unmountOnExit\n        >\n          <Fab aria-label={fab.label} className={fab.className2} color={fab.color2}\n            style={{display:fab.display2, right:'80px'}}\n            onClick={fab.action2}>\n            {fab.icon2}\n          </Fab>\n        </Zoom>\n\n        </>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}