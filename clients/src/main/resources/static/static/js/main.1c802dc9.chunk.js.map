{"version":3,"sources":["logo.svg","remoteclient.js","TransactionList.js","NodeExplorer.js","NodeDetails.js","GameBoard.js","TransactionDetails.js","MockEnvironmentDialogue.js","App.js","reportWebVitals.js","index.js"],"names":["getServer","console","log","window","location","href","indexOf","getNodes","callback","a","url","fetch","method","credentials","headers","then","response","status","json","catch","err","error","reply","sendChallenge","gameboard","counterParty","escrow","choice","sendAcceptChallenge","challenge","linearId","name","challenged","getTransactions","getTransactionDetails","transaction","id","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","TransactionList","props","onTransactionSelected","onError","classes","React","useState","txList","setTransactionList","useEffect","transactions","t","sort","b","recordedTime","filter","element","find","item","List","className","map","i","ListItem","onClick","style","cursor","ListItemAvatar","Avatar","class","ListItemText","primary","secondary","NodeExplorer","onNodeSelected","nodes","setNodes","nodeList","length","identities","organisation","address","addresses","node","NodeDetails","textAlign","src","formControl","margin","spacing","minWidth","selectEmpty","marginTop","GameBoard","onChange","setEscrow","setCounterParty","setChoice","setError","ready","currentNode","isCurrentNode","FormControl","InputLabel","Select","labelId","value","event","target","MenuItem","FormHelperText","display","button","marginRight","actionsContainer","marginBottom","resetContainer","padding","TransactionDetails","transactionDetails","setTransactionDetails","activeStep","setActiveStep","steps","handleChoiceChange","acceptChallenge","ChallengeState","getStepContent","step","IssuedState","collapsed","challenger","SettledState","AcceptedState","Button","variant","color","disabled","Stepper","orientation","label","index","Step","StepLabel","StepContent","Typography","avatar","blue","MockEnvironmentDialogue","TabPanel","children","other","component","role","hidden","aria-labelledby","Box","p","position","minHeight","fab","bottom","right","fabGreen","common","white","green","a11yProps","App","setValue","gameboardReady","setGameboardReady","setGameboard","nodeDetails","setNodeDetails","alertOpen","setAlertOpen","errorMessage","setErrorMessage","startGame","useTheme","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","fabs","icon","action","color2","display2","clsx","icon2","className2","action2","AppBar","Tabs","newValue","indicatorColor","textColor","aria-label","Tab","transactionDetailsTitle","axis","direction","onChangeIndex","dir","game","Zoom","in","timeout","transitionDelay","unmountOnExit","Fab","Collapse","Alert","severity","IconButton","size","fontSize","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c802dc9.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","const LOCAL_SERVER=\"http://localhost:10050/\";\nconst GET_NODES_API=\"getnodes\";\nconst ISSUE_API=\"issue\";\nconst GET_TRANSACTIONS_API=\"gettransactions\";\nconst GET_TRANSACTION_DETAILS_API=\"getstatesbylinearid\";\nconst ACCEPT_CHALLENGE_API=\"accept\";\n\nfunction getServer() {\n    console.log(\"getServer\", window.location.href);\n    if (window.location.href.indexOf('3000')>-1) {\n        return LOCAL_SERVER;\n    } else {\n        console.log(\"getServer returning\", window.location.href);\n        return window.location.href;\n    }\n}\n\nexport const getNodes = async(callback) => {\n    let url=`${getServer()}${GET_NODES_API}`;\n    console.log(\"getNodes url\", url);\n    let reply = await fetch(url, {\n        method: \"GET\",\n        credentials: \"same-origin\", // send cookies\n        headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(function (response) {\n            let responseCode = response.status;\n            return response.json();\n\n        })\n        .then(function (json) {\n            return {response:json}\n        }).catch(err=>{\n            console.log(\"getNodes error\", err);\n            return {error: `\"${err}\"`}\n        })\n        console.log(\"getNodes\", reply);\n    callback(reply.error, reply.response);\n}\nexport const sendChallenge = async(gameboard, callback) => {\n    console.log(\"sendChallenge\", gameboard);\n    let url=`${getServer()}${ISSUE_API}?counterParty=${gameboard.counterParty}&escrowParty=${gameboard.escrow}&choice=${gameboard.choice}`;\n    let reply = await fetch(url, {\n        method: \"GET\",\n        credentials: \"same-origin\", // send cookies\n        headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(function (response) {\n            //let responseCode = response.status;\n            return response.json();\n        })\n        .then(function (json) {\n            //return json\n            return {response:json}\n        }).catch(err=>{\n            console.log(\"sendChallenge error\", err);\n            return {error: `\"${err}\"`}\n        })\n        console.log(\"sendChallenge\", reply);\n    //callback(reply);\n    callback(reply.error, reply.response);\n}\n\nexport const sendAcceptChallenge =  async(challenge, callback) => {\n    console.log(\"sendAcceptChallenge\", challenge);\n    let url=`${getServer()}${ACCEPT_CHALLENGE_API}?linearId=${challenge.linearId}&choice=${challenge.choice}&escrowParty=${challenge.escrow.name}&challenged=${challenge.challenged.name}`;\n    console.log(\"sendAcceptChallenge\", url);\n    let reply = await fetch(url, {\n        method: \"GET\",\n        credentials: \"same-origin\", // send cookies\n        headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(function (response) {\n            //let responseCode = response.status;\n            return response.json();\n\n        })\n        .then(function (json) {\n            //return json\n            return {response:json}\n        }).catch(err=>{\n            console.log(\"sendAcceptChallenge error\", err);\n            return {error: `\"${err}\"`}\n        })\n        console.log(\"sendAcceptChallenge\", reply);\n    //callback(reply);\n    callback(reply.error, reply.response);\n}\nexport const getTransactions = async(callback) => {\n    let url=`${getServer()}${GET_TRANSACTIONS_API}`;\n    console.log(\"getTransactions url\", url);\n    let reply = await fetch(url, {\n        method: \"GET\",\n        credentials: \"same-origin\", // send cookies\n        headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(function (response) {\n            //let responseCode = response.status;\n            return response.json();\n\n        })\n        .then(function (json) {\n            //return json\n            return {response:json}\n        }).catch(err=>{\n            console.log(\"getTransactions error\", err);\n            return {error: `\"${err}\"`}\n        })\n        console.log(\"getTransactions\", reply);\n    //callback(reply);\n    callback(reply.error, reply.response);\n}\nexport const getTransactionDetails = async(transaction, callback) => {\n    let url=`${getServer()}${GET_TRANSACTION_DETAILS_API}?linearId=${transaction.id}`;\n    console.log(\"getTransactionDetails url\", url);\n    let reply = await fetch(url, {\n        method: \"GET\",\n        credentials: \"same-origin\", // send cookies\n        headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(function (response) {\n            //let responseCode = response.status;\n            return response.json();\n\n        })\n        .then(function (json) {\n            //return json\n            return {response:json}\n        }).catch(err=>{\n            console.log(\"getTransactionDetails error\", err);\n            return {error: `\"${err}\"`}\n        })\n        console.log(\"getTransactionDetails\", reply);\n    //callback(reply);\n    callback(reply.error, reply.response);\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport ImageIcon from '@material-ui/icons/Image';\nimport AccountBalance from '@material-ui/icons/AccountBalance';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\n\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport {getTransactions} from './remoteclient'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n\nfunction TransactionList(props) {\n    const { onTransactionSelected, onError, ...other } = props;\n    const classes = useStyles();\n    const [txList, setTransactionList] = React.useState([]);\n    React.useEffect(() => {\n        getTransactions(function(error, transactions) {\n            console.log(\"transactions\", error, transactions);\n            if (error) {\n                onError(error);\n                return;\n            }\n            //reduce to the latest transaction with the same linear ID\n            let t=transactions.sort((a,b)=>b.recordedTime-a.recordedTime)\n            t=t.filter(element=>element.recordedTime==transactions.find(item=>item.id==element.id).recordedTime);\n\n            console.log(\"transactions after filtering\", t);\n            setTransactionList(t);\n        })\n      }, []);\n      \n    return (\n        <List className={classes.root}>\n            {txList && txList.map((item,i)=>{\n                return(\n                <ListItem onClick={()=>onTransactionSelected(item)} style={{cursor:'pointer'}}>\n                    <ListItemAvatar>\n                    <Avatar>\n                        {item.class=='com.axa.RockPaperScissorsIssuedState' && <EmojiEvents />}\n                        {item.status=='com.axa.RockPaperScissorsChallengeState' && <ScheduleIcon />}\n                        {item.status=='com.axa.RockPaperScissorsAcceptedState' && <ScheduleIcon />}\n                        {item.status=='com.axa.RockPaperScissorsSettledState' && <AccountBalance />}\n                    </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={item.id} secondary={/*new Date(1*item.recordedTime).toISOString()*/item.class} />\n              </ListItem>\n                )\n            })\n            }\n        </List>\n    )\n}\nexport default TransactionList;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport ImageIcon from '@material-ui/icons/Image';\nimport AccountBalance from '@material-ui/icons/AccountBalance';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\n\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport {getNodes} from './remoteclient'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n\nfunction NodeExplorer(props) {\n    const { onNodeSelected, onError, ...other } = props;\n    const classes = useStyles();\n    const [nodes, setNodes] = React.useState('');\n    React.useEffect(() => {\n        getNodes((error, nodeList)=>{\n            if (error) {\n                onError(error);\n                return;\n            }\n            console.log(\"NodeExplorer\", nodeList);\n            for (var i=0;i<nodeList.length;i++) {\n                nodeList[i].name=nodeList[i].identities[0].name.organisation;\n                nodeList[i].address=nodeList[i].addresses[0];\n            };\n            setNodes(nodeList);\n        });\n    }, []);\n    return (\n        <List className={classes.root}>\n            {nodes && nodes.map((node,i)=>{\n                return(\n                <ListItem onClick={()=>onNodeSelected(node)} style={{cursor:'pointer'}}>\n                    <ListItemAvatar>\n                    <Avatar>\n                        {node.name!='Notary' && <AccountTreeIcon />}\n                        {node.name=='Notary' && <AccountBalance />}\n                    </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={node.name} secondary={node.address} />\n              </ListItem>\n                )\n            })\n            }\n        </List>\n    )\n}\nexport default NodeExplorer;","import JSONTree from 'react-json-tree'\nimport ReactJson from 'react-json-view'\n\nfunction NodeDetails(props) {\n    const { node, ...other } = props;\n    /*return (\n        <JSONTree data={node} />\n    )*/\n    return (\n        <div style={{textAlign:'left'}}>\n        <ReactJson src={node} />\n        </div>\n    )\n}\n\nexport default NodeDetails;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {getNodes} from './remoteclient'\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '90%',\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function GameBoard(props) {\n    const { onChange, onError, ...other } = props;\n    const classes = useStyles();\n    const [escrow, setEscrow] = React.useState('');\n    const [counterParty, setCounterParty] = React.useState('');\n    const [choice, setChoice] = React.useState('');\n    const [nodes, setNodes] = React.useState('');\n    const [error, setError] = React.useState('');\n    const handleChoiceChange = (event) => {\n        setChoice(event.target.value);\n    };\n    const handleEscrowChange = (event) => {\n        setEscrow(event.target.value);\n    };\n    const handleCounterpartyChange = (event) => {\n        setCounterParty(event.target.value);\n    };\n\n    React.useEffect(() => {\n        getNodes((error, nodeList)=>{\n            console.log(\"Gameboard\", nodeList);\n            if (error) {\n                onError(error);\n                return;\n            }\n            for (var i=0;i<nodeList.length;i++) {\n                nodeList[i].name=nodeList[i].identities[0].name.organisation;\n            };\n            setNodes(nodeList);\n        });\n    }, []);\n    React.useEffect(() => {\n        let ready=false;\n        if (choice && counterParty && escrow) {\n            if (counterParty===escrow) {\n             setError(\"Escrow and counterparty cannot be the same party\");\n            } else {\n                let currentNode=nodes.find(node=>node.isCurrentNode);\n                if (currentNode.name===counterParty) {\n                    setError(\"Counterparty and current node cannot be the same node\");\n                } else if (currentNode.name===escrow) {\n                    setError(\"Escrow and current node cannot be the same node\");\n                } else if (counterParty==='Notary' || escrow==='Notary') {\n                    setError(\"Notary cannot be a signing party\");\n                } else {\n                    setError(false);\n                    ready=true;\n                }\n            }\n        }\n        if (onChange) {\n            onChange({ready, escrow, counterParty, choice});\n        }\n      }, [counterParty, escrow, choice]);\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Choice</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={choice}\n                    onChange={handleChoiceChange}\n                >\n                    <MenuItem value={'rock'}>Rock</MenuItem>\n                    <MenuItem value={'paper'}>Paper</MenuItem>\n                    <MenuItem value={'scissors'}>Scissors</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl} error={error}>\n                <InputLabel id=\"demo-simple-select-label\">Escrow</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={escrow}\n                    onChange={handleEscrowChange}\n                >\n                    {\n                        nodes && nodes.map(node=>{\n                            return (\n                            <MenuItem value={node.name}>{node.name}</MenuItem>\n                            )\n                        })\n                    }\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl} error={error}>\n                <InputLabel id=\"demo-simple-select-label\">Counter Party</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={counterParty}\n                    onChange={handleCounterpartyChange}\n                >\n                    {\n                        nodes && nodes.map(node=>{\n                            return (\n                            <MenuItem value={node.name}>{node.name}</MenuItem>\n                            )\n                        })\n                    }\n                </Select>\n            </FormControl>\n                <FormHelperText style={{display:error ? '' : 'none'}}>{error}</FormHelperText>\n        </div>\n    )\n}","import React from 'react';\nimport JSONTree from 'react-json-tree'\nimport ReactJson from 'react-json-view'\nimport {getTransactionDetails, sendAcceptChallenge} from './remoteclient'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport AccountBalance from '@material-ui/icons/AccountBalance';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n      padding: theme.spacing(3),\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '90%',\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n  }));\n  \n  function getSteps(transactionDetails) {\n    return ['Issued State', 'Challenge State', 'Accepted State', 'Settled State'];\n  }\n\nfunction TransactionDetails(props) {\n    const { transaction, onError, ...other } = props;\n    const [transactionDetails, setTransactionDetails] = React.useState([]);\n    const [choice, setChoice] = React.useState('');\n    React.useEffect(() => {\n        getTransactionDetails(transaction, function(error, transactionDetails) {\n            if (error) {\n                onError(error);\n                return;\n            }\n            console.log(\"transactionDetails\",transactionDetails);\n            setTransactionDetails(transactionDetails);\n        })\n      }, []);\n      const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps(transactionDetails);\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n  const handleChoiceChange = (event) => {\n      setChoice(event.target.value);\n  };\n  const acceptChallenge = () => {\n    transactionDetails.ChallengeState.choice=choice;\n    sendAcceptChallenge(transactionDetails.ChallengeState, ()=>{\n      getTransactionDetails(transaction, function(error, transactionDetails) {\n          setTransactionDetails(transactionDetails);\n      })\n    })\n  }\n\n  function getStepContent(step, transactionDetails) {\n    let display=<></>\n  switch (step) {\n    case 0:\n      display=<>There is no Issued State</>;\n      if (transactionDetails) {\n          if (transactionDetails.ChallengeState && transactionDetails.ChallengeState.challenged.name == transactionDetails.currentNode.name) {\n              display=<>You are the counter party and not a signatory to this state.\n              Your vault only contains states of which you are a signatory</>;\n          } else {\n              display = <ReactJson src={transactionDetails.IssuedState} collapsed/>\n          }\n      }\n      return  <div>\n          {display}\n          </div>;\n    case 1:\n      display=<>There is no Challenge State</>;\n      if (transactionDetails) {\n          if (transactionDetails.IssuedState && transactionDetails.IssuedState.challenger.name == transactionDetails.currentNode.name) {\n              display=<>You are the challenger and not a signatory to this state.\n              Your vault only contains states of which you are a signatory</>;\n          } else  if (transactionDetails.ChallengeState) {\n              display = <ReactJson src={transactionDetails.ChallengeState} collapsed/>\n          }\n      }\n      return  <div>\n          {display}\n          </div>;\n    case 2:\n      display=<>There is no Accepted State - the challenge hasn't been accepted.</>;\n      if (transactionDetails) {\n          if (transactionDetails.SettledState && \n              transactionDetails.SettledState.challenger.name == transactionDetails.currentNode.name) {\n              display=<>You are the challenger and not a signatory to this state.\n              Your vault only contains states of which you are a signatory</>;\n          } else if (transactionDetails.SettledState && \n            transactionDetails.SettledState.escrow.name == transactionDetails.currentNode.name) {\n            display=<>You are the escrow and should see this. This is a bug.</>;\n            //display = <ReactJson src={transactionDetails.AcceptedState} collapsed/>\n          } else if (transactionDetails.AcceptedState) {\n              display = <ReactJson src={transactionDetails.AcceptedState} collapsed/>\n          } else if (transactionDetails.ChallengeState && transactionDetails.ChallengeState.challenged.name == transactionDetails.currentNode.name) {\n            display = <>\n              <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Choice</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={choice}\n                    onChange={handleChoiceChange}\n                >\n                    <MenuItem value={'rock'}>Rock</MenuItem>\n                    <MenuItem value={'paper'}>Paper</MenuItem>\n                    <MenuItem value={'scissors'}>Scissors</MenuItem>\n                </Select>\n            </FormControl>\n                <Button \n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.button}\n                  onClick={acceptChallenge}\n                  disabled={choice==''}\n                >\n                  Accept\n                </Button>\n                </>\n        }\n      }\n      return  <div>\n          {display}\n          </div>;\n    case 3:\n      display=<>There is no Settled State</>;\n      if (transactionDetails && transactionDetails.SettledState) {\n              display = <ReactJson src={transactionDetails.SettledState} collapsed/>\n      }\n      return  <div>\n          {display}\n          </div>;\n    default:\n      return 'Unknown step';\n  }\n}\n    /*return (\n        <div style={{textAlign:'left'}}>\n        <ReactJson src={transaction} />\n        </div>\n    )*/\n    return (\n        <div className={classes.root} style={{textAlign:'left'}}>\n          <Stepper activeStep={activeStep} orientation=\"vertical\">\n            {steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel onClick={()=>setActiveStep(index)}>{label}</StepLabel>\n                <StepContent>\n                  <Typography>{getStepContent(index, transactionDetails)}</Typography>\n                  {/*\n                  <div className={classes.actionsContainer}>\n                    <div>\n                      <Button\n                        disabled={activeStep === 0}\n                        onClick={handleBack}\n                        className={classes.button}\n                      >\n                        Back\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleNext}\n                        className={classes.button}\n                      >\n                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                      </Button>\n                    </div>\n                  </div>\n                  */}\n                </StepContent>\n              </Step>\n            ))}\n          </Stepper>\n          {/*activeStep === steps.length && (\n            <Paper square elevation={0} className={classes.resetContainer}>\n              <Typography>All steps completed - you&apos;re finished</Typography>\n              <Button onClick={handleReset} className={classes.button}>\n                Reset\n              </Button>\n            </Paper>\n          )*/}\n        </div>\n      );\n}\nexport default TransactionDetails;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport {getNodes} from './remoteclient'\nimport ImageIcon from '@material-ui/icons/Image';\nimport AccountBalance from '@material-ui/icons/AccountBalance';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\n\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction MockEnvironmentDialogue(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, open } = props;\n  const [nodes, setNodes] = React.useState('');\n  React.useEffect(() => {\n    getNodes(nodeList=>{\n        console.log(\"NodeExplorer\", nodeList);\n        for (var i=0;i<nodeList.length;i++) {\n            nodeList[i].name=nodeList[i].identities[0].name.organisation;\n            nodeList[i].address=nodeList[i].addresses[0];\n        };\n        setNodes(nodeList);\n    });\n}, []);\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Change mock node</DialogTitle>\n      <List>\n        {nodes && nodes.map((node) => (\n          <ListItem button onClick={() => handleListItemClick(node)} key={node.name}>\n            <ListItemAvatar>\n                    <Avatar>\n                        {node.name!='Notary' && <AccountTreeIcon />}\n                        {node.name=='Notary' && <AccountBalance />}\n                    </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={node.name} />\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  );\n}\n\nMockEnvironmentDialogue.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\nexport default MockEnvironmentDialogue;","import React from 'react';\nimport logo from './logo.svg';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport './App.css';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SwipeableViews from 'react-swipeable-views';\nimport Zoom from '@material-ui/core/Zoom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { green } from '@material-ui/core/colors';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport TransactionList from './TransactionList'\nimport NodeExplorer from './NodeExplorer'\nimport NodeDetails from './NodeDetails'\nimport GameBoard from './GameBoard';\nimport {sendChallenge} from './remoteclient'\nimport TransactionDetails from './TransactionDetails';\nimport MockEnvironmentDialogue from './MockEnvironmentDialogue'\nimport Alert from '@material-ui/lab/Alert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Collapse from '@material-ui/core/Collapse';\nimport Button from '@material-ui/core/Button';\nimport CloseIcon from '@material-ui/icons/Close';\n\n/*\n*/\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`action-tabpanel-${index}`}\n      aria-labelledby={`action-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600],\n    },\n  },\n}));\nfunction a11yProps(index) {\n  return {\n    id: `action-tab-${index}`,\n    'aria-controls': `action-tabpanel-${index}`,\n  };\n}\n\nfunction App() {\n  const [value, setValue] = React.useState(0);\n  const [gameboardReady, setGameboardReady] = React.useState(false);\n  const [gameboard, setGameboard] = React.useState({});\n  const [nodeDetails, setNodeDetails] = React.useState({});\n  const [transactionDetails, setTransactionDetails] = React.useState({});\n  const [mockEnvironmentOpen, setMockEnvironmentOpen] = React.useState(false);\n  const [alertOpen, setAlertOpen] = React.useState(false);\n  const [errorMessage, setErrorMessage] = React.useState(\"\");\n  const startGame = () =>{\n    setValue(3);\n  }\n  const issueChallenge = () => {\n    sendChallenge(gameboard, function(error, reply) {\n      console.log(\"challenge issued\",reply);\n      if (error) {\n        setErrorMessage(error);\n      }\n      setValue(0)\n    })\n  }\n  const cancelGame = () =>{\n    setValue(0);\n  }\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const showNodeDetails = node => {\n    setNodeDetails(node);\n    setValue(2);\n  }\n  const showNodeTransactionDetails = transaction => {\n    setTransactionDetails(transaction);\n    setValue(2);\n  }\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n  const changeGameboard = (game) => {\n    setGameboardReady(game.ready);\n    setGameboard(game);\n  }\n  const mockEnvironment = () => {\n    setMockEnvironmentOpen(true);\n  }\n  React.useEffect(() => {\n      if (value!=2) {\n        setNodeDetails(null);\n        setTransactionDetails(null)\n      }\n  }, [value]);\n  React.useEffect(() => {\n      if (errorMessage!='') {\n        setAlertOpen(true);\n      }\n  }, [errorMessage]);\n  React.useEffect(() => {\n      if (!alertOpen) {\n        setErrorMessage('');\n      }\n  }, [alertOpen]);\n  const classes = useStyles();\n  const theme = useTheme();\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  };\nconst transactionDetailsTitle = () => {\n  if (transactionDetails) {\n    if (transactionDetails.class=\"com.axa.RockPaperScissorsSettledState\") {\n      return \"settled\"\n    } else if (transactionDetails.class=\"com.axa.RockPaperScissorsChallengeState\") {\n      return \"issued\"\n    } else if (transactionDetails.class=\"com.axa.RockPaperScissorsAcceptedState\") {\n      return \"accepted\"\n    }\n  }\n  return \"\"\n}\nconst fabs = [\n  {\n    color: 'primary',\n    className: classes.fab,\n    icon: <AddIcon />,\n    label: 'Add',\n    action: startGame,  \n    color2: 'secondary',\n    display2: 'none'\n  },\n  {\n    color: 'primary',\n    className: classes.fab,\n    icon: <AddIcon />,\n    label: 'Add',\n    action: startGame,\n    color2: 'secondary',\n    display2: 'none'\n  },\n  {\n    color: 'inherit',\n    className: clsx(classes.fab, classes.fabGreen),\n    icon: <UpIcon />,\n    label: 'Expand',\n    display: 'none',\n    display2: 'none'\n  },\n  {\n    color: 'primary',\n    className: clsx(classes.fab, classes.fabGreen),\n    disabled: !gameboardReady,\n    icon: <PlayArrow />,\n    icon2: <CancelIcon />,\n    label: 'Edit',\n    action: issueChallenge,\n    className2: clsx(classes.fab),\n    color2: 'secondary',\n    action2: cancelGame\n  }\n];\n  return (\n    <div className=\"App\">\n     <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"action tabs example\"\n        >\n          <Tab label=\"Transactions\" {...a11yProps(0)} />\n          <Tab label=\"Nodes\" {...a11yProps(1)} />\n          <Tab label={transactionDetailsTitle()} {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction} >\n          <TransactionList onTransactionSelected={showNodeTransactionDetails} onError={setErrorMessage}/>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n        <NodeExplorer onNodeSelected={showNodeDetails} onError={setErrorMessage}/>\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          {nodeDetails &&\n            <NodeDetails node={nodeDetails} onError={setErrorMessage}/>\n          }\n          {transactionDetails &&\n            <TransactionDetails transaction={transactionDetails} onError={setErrorMessage}/>\n          }\n          \n        </TabPanel>\n        <TabPanel value={value} index={3} dir={theme.direction}>\n          <GameBoard onChange={changeGameboard} onError={setErrorMessage}/>\n        </TabPanel>\n      </SwipeableViews>\n      {fabs.map((fab, index) => (\n        <>\n        <Zoom\n          key={fab.color}\n          in={value === index}\n          timeout={transitionDuration}\n          style={{\n            transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`,\n          }}\n          unmountOnExit\n        >\n          <Fab aria-label={fab.label} className={fab.className} color={fab.color}\n            style={{display:fab.display}}\n            disabled={fab.disabled}\n            onClick={fab.action}>\n            {fab.icon}\n          </Fab>\n        </Zoom>\n\n        <Zoom\n          key={fab.color}\n          in={value === index}\n          timeout={transitionDuration}\n          style={{\n            transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`,\n          }}\n          unmountOnExit\n        >\n          <Fab aria-label={fab.label} className={fab.className2} color={fab.color2}\n            style={{display:fab.display2, right:'80px'}}\n            onClick={fab.action2}>\n            {fab.icon2}\n          </Fab>\n        </Zoom>\n\n        </>\n      ))}\n       <Collapse in={alertOpen}>\n        <Alert\n          severity='error'\n          action={\n            <IconButton\n              aria-label=\"close\"\n              color=\"inherit\"\n              size=\"small\"\n              onClick={() => {\n                setAlertOpen(false);\n              }}\n            >\n              <CloseIcon fontSize=\"inherit\" />\n            </IconButton>\n          }\n        >\n          <div>{errorMessage}</div>\n        </Alert>\n      </Collapse>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}