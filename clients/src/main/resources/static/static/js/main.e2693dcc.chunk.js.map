{"version":3,"sources":["logo.svg","remoteclient.js","TransactionList.js","NodeExplorer.js","NodeDetails.js","GameBoard.js","TransactionDetails.js","MockEnvironmentDialogue.js","App.js","reportWebVitals.js","index.js"],"names":["getServer","console","log","window","location","href","indexOf","getNodes","callback","a","url","fetch","method","credentials","headers","then","response","status","json","catch","err","reply","sendChallenge","gameboard","counterParty","escrow","choice","getTransactions","getTransactionDetails","transaction","id","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","TransactionList","props","onTransactionSelected","classes","React","useState","txList","setTransactionList","useEffect","transactions","List","className","map","item","i","ListItem","onClick","style","cursor","ListItemAvatar","Avatar","class","ListItemText","primary","secondary","NodeExplorer","onNodeSelected","nodes","setNodes","nodeList","length","name","identities","organisation","address","addresses","node","NodeDetails","textAlign","src","formControl","margin","spacing","minWidth","selectEmpty","marginTop","GameBoard","onChange","setEscrow","setCounterParty","setChoice","error","setError","ready","currentNode","find","isCurrentNode","FormControl","InputLabel","Select","labelId","value","event","target","MenuItem","FormHelperText","display","button","marginRight","actionsContainer","marginBottom","resetContainer","padding","getStepContent","step","transactionDetails","IssuedState","challenged","collapsed","challenger","ChallengeState","AcceptedState","SettledState","TransactionDetails","setTransactionDetails","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","Stepper","orientation","label","index","Step","StepLabel","StepContent","Typography","Button","disabled","variant","color","Paper","square","elevation","avatar","blue","TabPanel","children","other","component","role","hidden","aria-labelledby","Box","p","position","minHeight","fab","bottom","right","fabGreen","common","white","green","a11yProps","App","setValue","gameboardReady","setGameboardReady","setGameboard","nodeDetails","setNodeDetails","startGame","useTheme","transitionDuration","enter","transitions","duration","enteringScreen","exit","leavingScreen","fabs","icon","action","color2","display2","clsx","icon2","className2","action2","AppBar","Tabs","newValue","indicatorColor","textColor","aria-label","Tab","challengerChoice","axis","direction","onChangeIndex","dir","game","Zoom","in","timeout","transitionDelay","unmountOnExit","Fab","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2693dcc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","const LOCAL_SERVER=\"http://localhost:10050/\";\nconst GET_NODES_API=\"getnodes\";\nconst ISSUE_API=\"issue\";\nconst GET_TRANSACTIONS_API=\"gettransactions\";\nconst GET_TRANSACTION_DETAILS_API=\"getstatesbylinearid\";\n\nfunction getServer() {\n    console.log(\"getServer\", window.location.href);\n    if (window.location.href.indexOf('3000')>-1) {\n        return LOCAL_SERVER;\n    } else {\n        console.log(\"getServer returning\", window.location.href);\n        return window.location.href;\n    }\n}\n\nexport const getNodes = async(callback) => {\n    let url=`${getServer()}${GET_NODES_API}`;\n    console.log(\"getNodes url\", url);\n    let reply = await fetch(url, {\n        method: \"GET\",\n        credentials: \"same-origin\", // send cookies\n        headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(function (response) {\n            let responseCode = response.status;\n            return response.json();\n\n        })\n        .then(function (json) {\n            return json\n        }).catch(err=>{\n            console.log(\"getNodes error\", err);\n        })\n        console.log(\"getNodes\", reply);\n    callback(reply);\n}\nexport const sendChallenge =  async(gameboard, callback) => {\n    console.log(\"sendChallenge\", gameboard);\n    let url=`${getServer()}${ISSUE_API}?counterParty=${gameboard.counterParty}&escrowParty=${gameboard.escrow}&choice=${gameboard.choice}`;\n    let reply = await fetch(url, {\n        method: \"GET\",\n        credentials: \"same-origin\", // send cookies\n        headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(function (response) {\n            let responseCode = response.status;\n            return response.json();\n\n        })\n        .then(function (json) {\n            return json\n        }).catch(err=>{\n            console.log(\"sendChallenge error\", err);\n        })\n        console.log(\"sendChallenge\", reply);\n    callback(reply);\n}\nexport const getTransactions = async(callback) => {\n    let url=`${getServer()}${GET_TRANSACTIONS_API}`;\n    console.log(\"getTransactions url\", url);\n    let reply = await fetch(url, {\n        method: \"GET\",\n        credentials: \"same-origin\", // send cookies\n        headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(function (response) {\n            let responseCode = response.status;\n            return response.json();\n\n        })\n        .then(function (json) {\n            return json\n        }).catch(err=>{\n            console.log(\"getTransactions error\", err);\n        })\n        console.log(\"getTransactions\", reply);\n    callback(reply);\n}\nexport const getTransactionDetails = async(transaction, callback) => {\n    let url=`${getServer()}${GET_TRANSACTION_DETAILS_API}?linearId=${transaction.id}`;\n    console.log(\"getTransactionDetails url\", url);\n    let reply = await fetch(url, {\n        method: \"GET\",\n        credentials: \"same-origin\", // send cookies\n        headers: {\n            'Accept': 'application/json, text/plain, */*',\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(function (response) {\n            let responseCode = response.status;\n            return response.json();\n\n        })\n        .then(function (json) {\n            return json\n        }).catch(err=>{\n            console.log(\"getTransactionDetails error\", err);\n        })\n        console.log(\"getTransactionDetails\", reply);\n    callback(reply);\n}\n\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport ImageIcon from '@material-ui/icons/Image';\nimport AccountBalance from '@material-ui/icons/AccountBalance';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\n\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport {getTransactions} from './remoteclient'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n\nfunction TransactionList(props) {\n    const { onTransactionSelected, ...other } = props;\n    const classes = useStyles();\n    const [txList, setTransactionList] = React.useState([]);\n    React.useEffect(() => {\n        getTransactions(function(transactions) {\n            console.log(\"transactions\", transactions);\n            setTransactionList(transactions);\n        })\n      }, []);\n      \n    return (\n        <List className={classes.root}>\n            {txList && txList.map((item,i)=>{\n                return(\n                <ListItem onClick={()=>onTransactionSelected(item)} style={{cursor:'pointer'}}>\n                    <ListItemAvatar>\n                    <Avatar>\n                        {item.class=='com.axa.RockPaperScissorsIssuedState' && <EmojiEvents />}\n                        {item.status=='com.axa.RockPaperScissorsChallengeState' && <AccountBalance />}\n                        {item.status=='com.axa.RockPaperScissorsSettledState' && <ScheduleIcon />}\n                    </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={item.id} secondary={/*new Date(1*item.recordedTime).toISOString()*/item.class} />\n              </ListItem>\n                )\n            })\n            }\n        </List>\n    )\n}\nexport default TransactionList;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n\nimport ImageIcon from '@material-ui/icons/Image';\nimport AccountBalance from '@material-ui/icons/AccountBalance';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\n\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport {getNodes} from './remoteclient'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n      maxWidth: 360,\n      backgroundColor: theme.palette.background.paper,\n    },\n  }));\n\nfunction NodeExplorer(props) {\n    const { onNodeSelected, ...other } = props;\n    const classes = useStyles();\n    const [nodes, setNodes] = React.useState('');\n    React.useEffect(() => {\n        getNodes(nodeList=>{\n            console.log(\"NodeExplorer\", nodeList);\n            for (var i=0;i<nodeList.length;i++) {\n                nodeList[i].name=nodeList[i].identities[0].name.organisation;\n                nodeList[i].address=nodeList[i].addresses[0];\n            };\n            setNodes(nodeList);\n        });\n    }, []);\n    return (\n        <List className={classes.root}>\n            {nodes && nodes.map((node,i)=>{\n                return(\n                <ListItem onClick={()=>onNodeSelected(node)} style={{cursor:'pointer'}}>\n                    <ListItemAvatar>\n                    <Avatar>\n                        {node.name!='Notary' && <AccountTreeIcon />}\n                        {node.name=='Notary' && <AccountBalance />}\n                    </Avatar>\n                    </ListItemAvatar>\n                    <ListItemText primary={node.name} secondary={node.address} />\n              </ListItem>\n                )\n            })\n            }\n        </List>\n    )\n}\nexport default NodeExplorer;","import JSONTree from 'react-json-tree'\nimport ReactJson from 'react-json-view'\n\nfunction NodeDetails(props) {\n    const { node, ...other } = props;\n    /*return (\n        <JSONTree data={node} />\n    )*/\n    return (\n        <div style={{textAlign:'left'}}>\n        <ReactJson src={node} />\n        </div>\n    )\n}\n\nexport default NodeDetails;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {getNodes} from './remoteclient'\n\nconst useStyles = makeStyles((theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: '90%',\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nexport default function GameBoard(props) {\n    const { onChange, ...other } = props;\n    const classes = useStyles();\n    const [escrow, setEscrow] = React.useState('');\n    const [counterParty, setCounterParty] = React.useState('');\n    const [choice, setChoice] = React.useState('');\n    const [nodes, setNodes] = React.useState('');\n    const [error, setError] = React.useState('');\n    const handleChoiceChange = (event) => {\n        setChoice(event.target.value);\n    };\n    const handleEscrowChange = (event) => {\n        setEscrow(event.target.value);\n    };\n    const handleCounterpartyChange = (event) => {\n        setCounterParty(event.target.value);\n    };\n\n    React.useEffect(() => {\n        getNodes(nodeList=>{\n            console.log(\"Gameboard\", nodeList);\n            for (var i=0;i<nodeList.length;i++) {\n                nodeList[i].name=nodeList[i].identities[0].name.organisation;\n            };\n            setNodes(nodeList);\n        });\n    }, []);\n    React.useEffect(() => {\n        let ready=false;\n        if (choice && counterParty && escrow) {\n            if (counterParty===escrow) {\n             setError(\"Escrow and counterparty cannot be the same party\");\n            } else {\n                let currentNode=nodes.find(node=>node.isCurrentNode);\n                if (currentNode.name===counterParty) {\n                    setError(\"Counterparty and current node cannot be the same node\");\n                } else if (currentNode.name===escrow) {\n                    setError(\"Escrow and current node cannot be the same node\");\n                } else if (counterParty==='Notary' || escrow==='Notary') {\n                    setError(\"Notary cannot be a signing party\");\n                } else {\n                    setError(false);\n                    ready=true;\n                }\n            }\n        }\n        if (onChange) {\n            onChange({ready, escrow, counterParty, choice});\n        }\n      }, [counterParty, escrow, choice]);\n    return (\n        <div>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"demo-simple-select-label\">Choice</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={choice}\n                    onChange={handleChoiceChange}\n                >\n                    <MenuItem value={'rock'}>Rock</MenuItem>\n                    <MenuItem value={'paper'}>Paper</MenuItem>\n                    <MenuItem value={'scissors'}>Scissors</MenuItem>\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl} error={error}>\n                <InputLabel id=\"demo-simple-select-label\">Escrow</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={escrow}\n                    onChange={handleEscrowChange}\n                >\n                    {\n                        nodes && nodes.map(node=>{\n                            return (\n                            <MenuItem value={node.name}>{node.name}</MenuItem>\n                            )\n                        })\n                    }\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl} error={error}>\n                <InputLabel id=\"demo-simple-select-label\">Counter Party</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    value={counterParty}\n                    onChange={handleCounterpartyChange}\n                >\n                    {\n                        nodes && nodes.map(node=>{\n                            return (\n                            <MenuItem value={node.name}>{node.name}</MenuItem>\n                            )\n                        })\n                    }\n                </Select>\n            </FormControl>\n                <FormHelperText style={{display:error ? '' : 'none'}}>{error}</FormHelperText>\n        </div>\n    )\n}","import React from 'react';\nimport JSONTree from 'react-json-tree'\nimport ReactJson from 'react-json-view'\nimport {getTransactionDetails} from './remoteclient'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport StepContent from '@material-ui/core/StepContent';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport AccountBalance from '@material-ui/icons/AccountBalance';\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    button: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    actionsContainer: {\n      marginBottom: theme.spacing(2),\n    },\n    resetContainer: {\n      padding: theme.spacing(3),\n    },\n  }));\n  \n  function getSteps(transactionDetails) {\n    return ['Issued State', 'Challenge State', 'Accepted State', 'Settled State'];\n  }\n  function getStepContent(step, transactionDetails) {\n      let display=<></>\n    switch (step) {\n      case 0:\n        display=<>There is no Issued State</>;\n        if (transactionDetails) {\n            if (transactionDetails.IssuedState && transactionDetails.IssuedState.challenged.name == transactionDetails.currentNode.name) {\n                display=<>You are the counter party and not a signatory to this state.\n                Your vault only contains states of which you are a signatory</>;\n            } else {\n                display = <ReactJson src={transactionDetails.IssuedState} collapsed/>\n            }\n        }\n        return  <div>\n            {display}\n            </div>;\n      case 1:\n        display=<>There is no Challenge State</>;\n        if (transactionDetails) {\n            if (transactionDetails.IssuedState && transactionDetails.IssuedState.challenger.name == transactionDetails.currentNode.name) {\n                display=<>You are the challenger and not a signatory to this state.\n                Your vault only contains states of which you are a signatory</>;\n            } else  if (transactionDetails.ChallengeState) {\n                display = <ReactJson src={transactionDetails.ChallengeState} collapsed/>\n            }\n        }\n        return  <div>\n            {display}\n            </div>;\n      case 2:\n        display=<>There is no Accepted State</>;\n        if (transactionDetails) {\n            if (transactionDetails.IssuedState && transactionDetails.IssuedState.escrow.name == transactionDetails.currentNode.name) {\n                display=<>You are the escrow party and not a signatory to this state.\n                Your vault only contains states of which you are a signatory</>;\n            } else  if (transactionDetails.AcceptedState) {\n                display = <ReactJson src={transactionDetails.AcceptedState} collapsed/>\n            }\n        }\n        return  <div>\n            {display}\n            </div>;\n      case 3:\n        return <div>\n            {transactionDetails && transactionDetails.SettledState &&\n                <ReactJson src={transactionDetails.SettledState} collapsed/>\n            }\n            {transactionDetails && !transactionDetails.SettledState &&\n                `This transaction is not in your scope`\n            }\n            </div>;\n      default:\n        return 'Unknown step';\n    }\n  }\n\nfunction TransactionDetails(props) {\n    const { transaction, ...other } = props;\n    const [transactionDetails, setTransactionDetails] = React.useState([]);\n    React.useEffect(() => {\n        getTransactionDetails(transaction, function(transactionDetails) {\n            console.log(transactionDetails);\n            setTransactionDetails(transactionDetails);\n        })\n      }, []);\n      const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const steps = getSteps(transactionDetails);\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n    /*return (\n        <div style={{textAlign:'left'}}>\n        <ReactJson src={transaction} />\n        </div>\n    )*/\n    return (\n        <div className={classes.root} style={{textAlign:'left'}}>\n          <Stepper activeStep={activeStep} orientation=\"vertical\">\n            {steps.map((label, index) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n                <StepContent>\n                  <Typography>{getStepContent(index, transactionDetails)}</Typography>\n                  <div className={classes.actionsContainer}>\n                    <div>\n                      <Button\n                        disabled={activeStep === 0}\n                        onClick={handleBack}\n                        className={classes.button}\n                      >\n                        Back\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        onClick={handleNext}\n                        className={classes.button}\n                      >\n                        {activeStep === steps.length - 1 ? 'Finish' : 'Next'}\n                      </Button>\n                    </div>\n                  </div>\n                </StepContent>\n              </Step>\n            ))}\n          </Stepper>\n          {activeStep === steps.length && (\n            <Paper square elevation={0} className={classes.resetContainer}>\n              <Typography>All steps completed - you&apos;re finished</Typography>\n              <Button onClick={handleReset} className={classes.button}>\n                Reset\n              </Button>\n            </Paper>\n          )}\n        </div>\n      );\n}\nexport default TransactionDetails;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport {getNodes} from './remoteclient'\nimport ImageIcon from '@material-ui/icons/Image';\nimport AccountBalance from '@material-ui/icons/AccountBalance';\nimport AccountTreeIcon from '@material-ui/icons/AccountTree';\nimport EmojiEvents from '@material-ui/icons/EmojiEvents';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\n\nimport WorkIcon from '@material-ui/icons/Work';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\n\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600],\n  },\n});\n\nfunction MockEnvironmentDialogue(props) {\n  const classes = useStyles();\n  const { onClose, selectedValue, open } = props;\n  const [nodes, setNodes] = React.useState('');\n  React.useEffect(() => {\n    getNodes(nodeList=>{\n        console.log(\"NodeExplorer\", nodeList);\n        for (var i=0;i<nodeList.length;i++) {\n            nodeList[i].name=nodeList[i].identities[0].name.organisation;\n            nodeList[i].address=nodeList[i].addresses[0];\n        };\n        setNodes(nodeList);\n    });\n}, []);\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = (value) => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Change mock node</DialogTitle>\n      <List>\n        {nodes && nodes.map((node) => (\n          <ListItem button onClick={() => handleListItemClick(node)} key={node.name}>\n            <ListItemAvatar>\n                    <Avatar>\n                        {node.name!='Notary' && <AccountTreeIcon />}\n                        {node.name=='Notary' && <AccountBalance />}\n                    </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={node.name} />\n          </ListItem>\n        ))}\n      </List>\n    </Dialog>\n  );\n}\n\nMockEnvironmentDialogue.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired,\n};\nexport default MockEnvironmentDialogue;","import React from 'react';\nimport logo from './logo.svg';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport './App.css';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport PlayArrow from '@material-ui/icons/PlayArrow';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport SwipeableViews from 'react-swipeable-views';\nimport Zoom from '@material-ui/core/Zoom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { green } from '@material-ui/core/colors';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport UpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport TransactionList from './TransactionList'\nimport NodeExplorer from './NodeExplorer'\nimport NodeDetails from './NodeDetails'\nimport GameBoard from './GameBoard';\nimport {sendChallenge} from './remoteclient'\nimport TransactionDetails from './TransactionDetails';\nimport MockEnvironmentDialogue from './MockEnvironmentDialogue'\n/*\n*/\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`action-tabpanel-${index}`}\n      aria-labelledby={`action-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.paper,\n    width: 500,\n    position: 'relative',\n    minHeight: 200,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n  fabGreen: {\n    color: theme.palette.common.white,\n    backgroundColor: green[500],\n    '&:hover': {\n      backgroundColor: green[600],\n    },\n  },\n}));\nfunction a11yProps(index) {\n  return {\n    id: `action-tab-${index}`,\n    'aria-controls': `action-tabpanel-${index}`,\n  };\n}\n\nfunction App() {\n  const [value, setValue] = React.useState(0);\n  const [gameboardReady, setGameboardReady] = React.useState(false);\n  const [gameboard, setGameboard] = React.useState({});\n  const [nodeDetails, setNodeDetails] = React.useState({});\n  const [transactionDetails, setTransactionDetails] = React.useState({});\n  const [mockEnvironmentOpen, setMockEnvironmentOpen] = React.useState(false);\n  const startGame = () =>{\n    setValue(3);\n  }\n  const issueChallenge = () => {\n    sendChallenge(gameboard, function(reply) {\n      console.log(\"challenge issued\",reply);\n      setValue(0)\n    })\n  }\n  const cancelGame = () =>{\n    setValue(0);\n  }\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  const showNodeDetails = node => {\n    setNodeDetails(node);\n    setValue(2);\n  }\n  const showNodeTransactionDetails = transaction => {\n    setTransactionDetails(transaction);\n    setValue(2);\n  }\n\n  const handleChangeIndex = (index) => {\n    setValue(index);\n  };\n  const changeGameboard = (game) => {\n    setGameboardReady(game.ready);\n    setGameboard(game);\n  }\n  const mockEnvironment = () => {\n    setMockEnvironmentOpen(true);\n  }\n  React.useEffect(() => {\n    console.log(\"value\", value)\n      if (value!=2) {\n        setNodeDetails(null);\n        setTransactionDetails(null)\n      }\n  }, [value]);\n  const classes = useStyles();\n  const theme = useTheme();\n  const transitionDuration = {\n    enter: theme.transitions.duration.enteringScreen,\n    exit: theme.transitions.duration.leavingScreen,\n  };\n\nconst fabs = [\n  {\n    color: 'primary',\n    className: classes.fab,\n    icon: <AddIcon />,\n    label: 'Add',\n    action: startGame,  \n    color2: 'secondary',\n    display2: 'none'\n  },\n  {\n    color: 'primary',\n    className: classes.fab,\n    icon: <AddIcon />,\n    label: 'Add',\n    action: startGame,\n    color2: 'secondary',\n    display2: 'none'\n  },\n  {\n    color: 'inherit',\n    className: clsx(classes.fab, classes.fabGreen),\n    icon: <UpIcon />,\n    label: 'Expand',\n    display: 'none',\n    display2: 'none'\n  },\n  {\n    color: 'primary',\n    className: clsx(classes.fab, classes.fabGreen),\n    disabled: !gameboardReady,\n    icon: <PlayArrow />,\n    icon2: <CancelIcon />,\n    label: 'Edit',\n    action: issueChallenge,\n    className2: clsx(classes.fab),\n    color2: 'secondary',\n    action2: cancelGame\n  }\n];\n  return (\n    <div className=\"App\">\n     <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"fullWidth\"\n          aria-label=\"action tabs example\"\n        >\n          <Tab label=\"Transactions\" {...a11yProps(0)} />\n          <Tab label=\"Nodes\" {...a11yProps(1)} />\n          <Tab label={nodeDetails ? nodeDetails.name : transactionDetails ? transactionDetails.challengerChoice : \"\"} {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <SwipeableViews\n        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n        index={value}\n        onChangeIndex={handleChangeIndex}\n      >\n        <TabPanel value={value} index={0} dir={theme.direction} >\n          <TransactionList onTransactionSelected={showNodeTransactionDetails}/>\n        </TabPanel>\n        <TabPanel value={value} index={1} dir={theme.direction}>\n        <NodeExplorer onNodeSelected={showNodeDetails}/>\n        </TabPanel>\n        <TabPanel value={value} index={2} dir={theme.direction}>\n          {nodeDetails &&\n            <NodeDetails node={nodeDetails}/>\n          }\n          {transactionDetails &&\n            <TransactionDetails transaction={transactionDetails}/>\n          }\n          \n        </TabPanel>\n        <TabPanel value={value} index={3} dir={theme.direction}>\n          <GameBoard onChange={changeGameboard}/>\n        </TabPanel>\n      </SwipeableViews>\n      {fabs.map((fab, index) => (\n        <>\n        <Zoom\n          key={fab.color}\n          in={value === index}\n          timeout={transitionDuration}\n          style={{\n            transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`,\n          }}\n          unmountOnExit\n        >\n          <Fab aria-label={fab.label} className={fab.className} color={fab.color}\n            style={{display:fab.display}}\n            disabled={fab.disabled}\n            onClick={fab.action}>\n            {fab.icon}\n          </Fab>\n        </Zoom>\n\n        <Zoom\n          key={fab.color}\n          in={value === index}\n          timeout={transitionDuration}\n          style={{\n            transitionDelay: `${value === index ? transitionDuration.exit : 0}ms`,\n          }}\n          unmountOnExit\n        >\n          <Fab aria-label={fab.label} className={fab.className2} color={fab.color2}\n            style={{display:fab.display2, right:'80px'}}\n            onClick={fab.action2}>\n            {fab.icon2}\n          </Fab>\n        </Zoom>\n\n        </>\n      ))}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}